<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- root-context.xml은 현재 프로젝트를 인텔리제이에서 스프링 프레임워크로 인식하고 필요한 기능을 지원하기 위한 설정입니다. -->

    <!-- HikariCP 데이터베이스 연결 설정을 정의한 빈(bean)입니다. -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!-- 데이터베이스 드라이버 클래스명 설정 -->
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
        <!-- 데이터베이스 연결 URL 설정 -->
        <property name="jdbcUrl" value="jdbc:mariadb://localhost:3307/webdb"></property>
        <!-- 데이터베이스 접속 사용자명 설정 -->
        <property name="username" value="webuser"></property>
        <!-- 데이터베이스 접속 암호 설정 -->
        <property name="password" value="webuser"></property>
        <!-- 데이터베이스 연결 풀 관련 설정 -->
        <property name="dataSourceProperties">
            <props>
                <!-- PreparedStatement 캐시 활성화 여부 -->
                <prop key="cachePrepStmts">true</prop>
                <!-- PreparedStatement 캐시 크기 설정 -->
                <prop key="prepStmtCacheSize">250</prop>
                <!-- PreparedStatement 캐시 SQL 크기 제한 설정 -->
                <prop key="prepStmtCacheSqlLimit">2048</prop>
            </props>
        </property>
    </bean>

    <!-- HikariCP 데이터 소스 빈(bean) 설정 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <!-- HikariConfig 빈을 생성자를 통해 주입 -->
        <constructor-arg ref="hikariConfig"/>
    </bean>

    <!-- @ComponentScan을 사용하여 지정된 패키지 내의 클래스를 스캔하여
         자동으로 빈을 생성하도록 설정하는 컴포넌트 스캔 설정입니다. -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/mapper/**/*.xml"></property>

    </bean>
    <context:component-scan base-package="com.ssg.product_manage.config"/>
    <context:component-scan base-package="com.ssg.product_manage.service"></context:component-scan>
    <mybatis:scan base-package="com.ssg.product_manage.mapper"></mybatis:scan>
</beans>